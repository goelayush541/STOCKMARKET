{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush Goel\\\\OneDrive\\\\Desktop\\\\DEPLOYED\\\\STOCKMARKET\\\\frontend\\\\src\\\\components\\\\DataVisualization\\\\Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useMarketData } from '../../hooks/useMarketData';\nimport './Charts.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  const [selectedSymbol, setSelectedSymbol] = useState('AAPL');\n  const [timeframe, setTimeframe] = useState('1d');\n  const [chartType, setChartType] = useState('price'); // 'price', 'volume', 'combined'\n\n  const {\n    data: marketData,\n    loading,\n    error\n  } = useMarketData(selectedSymbol, timeframe);\n\n  // Process and validate data\n  const processedData = useMemo(() => {\n    if (!marketData || !Array.isArray(marketData)) {\n      return generateMockData(selectedSymbol, 50);\n    }\n    const validData = marketData.filter(item => item && item.timestamp && typeof item.close === 'number' && !isNaN(item.close)).map(item => ({\n      ...item,\n      timestamp: new Date(item.timestamp),\n      date: new Date(item.timestamp).toLocaleDateString(),\n      time: new Date(item.timestamp).toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    })).sort((a, b) => a.timestamp - b.timestamp);\n    return validData.length > 0 ? validData : generateMockData(selectedSymbol, 50);\n  }, [marketData, selectedSymbol]);\n  const symbols = ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META'];\n  const timeframes = [{\n    value: '1h',\n    label: '1 Hour'\n  }, {\n    value: '1d',\n    label: '1 Day'\n  }, {\n    value: '1w',\n    label: '1 Week'\n  }, {\n    value: '1m',\n    label: '1 Month'\n  }];\n  const chartTypes = [{\n    value: 'price',\n    label: 'Price Chart'\n  }, {\n    value: 'volume',\n    label: 'Volume Chart'\n  }, {\n    value: 'combined',\n    label: 'Combined View'\n  }];\n\n  // Generate mock data fallback\n  function generateMockData(symbol, count = 50) {\n    const mockData = [];\n    const basePrice = 100 + Math.random() * 100;\n    let currentPrice = basePrice;\n    const now = new Date();\n    for (let i = 0; i < count; i++) {\n      const priceChange = (Math.random() - 0.5) * 3;\n      currentPrice = Math.max(1, currentPrice + priceChange); // Ensure price doesn't go below 1\n\n      const timestamp = new Date(now - (count - i) * 5 * 60 * 1000);\n      mockData.push({\n        symbol,\n        timestamp,\n        date: timestamp.toLocaleDateString(),\n        time: timestamp.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        }),\n        open: Math.max(1, currentPrice - Math.random() * 2),\n        high: Math.max(1, currentPrice + Math.random() * 3),\n        low: Math.max(1, currentPrice - Math.random() * 3),\n        close: Math.max(1, currentPrice),\n        volume: Math.floor(1000000 + Math.random() * 9000000)\n      });\n    }\n    return mockData;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"charts-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Market Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Symbol:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedSymbol,\n            onChange: e => setSelectedSymbol(e.target.value),\n            className: \"chart-select\",\n            children: symbols.map(symbol => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: symbol,\n              children: symbol\n            }, symbol, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Timeframe:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: timeframe,\n            onChange: e => setTimeframe(e.target.value),\n            className: \"chart-select\",\n            children: timeframes.map(tf => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tf.value,\n              children: tf.label\n            }, tf.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Chart Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: chartType,\n            onChange: e => setChartType(e.target.value),\n            className: \"chart-select\",\n            children: chartTypes.map(ct => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ct.value,\n              children: ct.label\n            }, ct.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-content\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Loading market data for \", selectedSymbol, \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Unable to load real-time data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing demo data for \", selectedSymbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Error: \", error.message || error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), !loading && processedData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [chartType === 'price' && /*#__PURE__*/_jsxDEV(PriceChart, {\n          data: processedData,\n          symbol: selectedSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), chartType === 'volume' && /*#__PURE__*/_jsxDEV(VolumeChart, {\n          data: processedData,\n          symbol: selectedSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), chartType === 'combined' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combined-charts\",\n          children: [/*#__PURE__*/_jsxDEV(PriceChart, {\n            data: processedData,\n            symbol: selectedSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(VolumeChart, {\n            data: processedData,\n            symbol: selectedSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TechnicalIndicators, {\n          data: processedData,\n          symbol: selectedSymbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChartStatistics, {\n          data: processedData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n// Price Chart Component\n_s(Charts, \"03B6dKng8cLdUtKCsjkRlllwxdg=\", false, function () {\n  return [useMarketData];\n});\n_c = Charts;\nconst PriceChart = ({\n  data,\n  symbol\n}) => {\n  var _data$, _data$Math$floor, _data;\n  if (!data || data.length === 0) return null;\n  const prices = data.map(d => d.close).filter(price => !isNaN(price));\n  if (prices.length === 0) return null;\n  const maxPrice = Math.max(...prices);\n  const minPrice = Math.min(...prices);\n  const priceRange = maxPrice - minPrice || 1; // Avoid division by zero\n\n  const priceChange = data.length > 1 ? prices[prices.length - 1] - prices[0] : 0;\n  const priceChangePercent = data.length > 1 ? priceChange / prices[0] * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [symbol, \" Price Chart\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `price-change ${priceChange >= 0 ? 'positive' : 'negative'}`,\n        children: [priceChange >= 0 ? '↗' : '↘', \" $\", priceChange.toFixed(2), \" (\", priceChangePercent.toFixed(2), \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"price-chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-y-axis\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$\", maxPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$\", ((maxPrice + minPrice) / 2).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"$\", minPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-bars\",\n          children: data.map((point, index) => {\n            var _point$open, _point$high, _point$low, _point$volume;\n            if (isNaN(point.close)) return null;\n            const height = 100 - (point.close - minPrice) / priceRange * 100;\n            const isPositive = point.close >= (point.open || point.close);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-bar\",\n              style: {\n                height: `${Math.max(1, height)}%`,\n                // Ensure minimum height\n                backgroundColor: isPositive ? '#10b981' : '#ef4444',\n                opacity: 0.7 + index / data.length * 0.3 // Gradient effect\n              },\n              title: `$${point.close.toFixed(2)}\nOpen: $${((_point$open = point.open) === null || _point$open === void 0 ? void 0 : _point$open.toFixed(2)) || point.close.toFixed(2)}\nHigh: $${((_point$high = point.high) === null || _point$high === void 0 ? void 0 : _point$high.toFixed(2)) || point.close.toFixed(2)}\nLow: $${((_point$low = point.low) === null || _point$low === void 0 ? void 0 : _point$low.toFixed(2)) || point.close.toFixed(2)}\nVolume: ${((_point$volume = point.volume) === null || _point$volume === void 0 ? void 0 : _point$volume.toLocaleString()) || 'N/A'}\n${point.date} ${point.time}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-x-axis\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_data$Math$floor = data[Math.floor(data.length / 2)]) === null || _data$Math$floor === void 0 ? void 0 : _data$Math$floor.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_data = data[data.length - 1]) === null || _data === void 0 ? void 0 : _data.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n\n// Volume Chart Component\n_c2 = PriceChart;\nconst VolumeChart = ({\n  data,\n  symbol\n}) => {\n  if (!data || data.length === 0) return null;\n  const volumes = data.map(d => d.volume).filter(vol => !isNaN(vol));\n  if (volumes.length === 0) return null;\n  const maxVolume = Math.max(...volumes);\n  const totalVolume = volumes.reduce((sum, vol) => sum + vol, 0);\n  const avgVolume = totalVolume / volumes.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [symbol, \" Trading Volume\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-stats\",\n        children: [\"Avg: \", (avgVolume / 1000000).toFixed(1), \"M | Total: \", (totalVolume / 1000000).toFixed(0), \"M\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"volume-chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-bars\",\n        children: data.map((point, index) => {\n          if (!point.volume || isNaN(point.volume)) return null;\n          const height = point.volume / maxVolume * 100;\n          const isPositive = point.close >= (point.open || point.close);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"volume-bar\",\n            style: {\n              height: `${Math.max(1, height)}%`,\n              backgroundColor: isPositive ? '#10b981' : '#ef4444',\n              opacity: 0.6\n            },\n            title: `Volume: ${point.volume.toLocaleString()}\n${point.date} ${point.time}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n\n// Technical Indicators Component\n_c3 = VolumeChart;\nconst TechnicalIndicators = ({\n  data,\n  symbol\n}) => {\n  var _data2;\n  if (!data || data.length < 5) return null;\n\n  // Calculate Simple Moving Average\n  const calculateSMA = (period = 10) => {\n    if (data.length < period) return null;\n    const recentData = data.slice(-period);\n    const sum = recentData.reduce((acc, point) => acc + point.close, 0);\n    return sum / period;\n  };\n\n  // Calculate RSI\n  const calculateRSI = (period = 14) => {\n    if (data.length < period + 1) return 50;\n    let gains = 0;\n    let losses = 0;\n    for (let i = 1; i <= period; i++) {\n      const change = data[i].close - data[i - 1].close;\n      if (change > 0) gains += change;else losses -= change;\n    }\n    const avgGain = gains / period;\n    const avgLoss = losses / period || 1; // Avoid division by zero\n\n    const rs = avgGain / avgLoss;\n    return 100 - 100 / (1 + rs);\n  };\n\n  // Calculate MACD (simplified)\n  const calculateMACD = () => {\n    if (data.length < 26) return {\n      value: 0,\n      signal: 0\n    };\n    const ema12 = calculateEMA(12);\n    const ema26 = calculateEMA(26);\n    const macdLine = ema12 - ema26;\n    return {\n      value: macdLine,\n      signal: macdLine > 0 ? 'BULLISH' : 'BEARISH'\n    };\n  };\n  const calculateEMA = period => {\n    const multiplier = 2 / (period + 1);\n    let ema = data[0].close;\n    for (let i = 1; i < data.length; i++) {\n      ema = (data[i].close - ema) * multiplier + ema;\n    }\n    return ema;\n  };\n  const sma10 = calculateSMA(10);\n  const sma20 = calculateSMA(20);\n  const rsi = calculateRSI();\n  const macd = calculateMACD();\n  const currentPrice = (_data2 = data[data.length - 1]) === null || _data2 === void 0 ? void 0 : _data2.close;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Technical Indicators - \", symbol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicators-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-label\",\n          children: \"Current Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-value\",\n          children: [\"$\", (currentPrice === null || currentPrice === void 0 ? void 0 : currentPrice.toFixed(2)) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-label\",\n          children: \"SMA (10):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-value\",\n          children: sma10 ? `$${sma10.toFixed(2)}` : 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-label\",\n          children: \"SMA (20):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-value\",\n          children: sma20 ? `$${sma20.toFixed(2)}` : 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-label\",\n          children: \"RSI (14):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `indicator-value ${rsi > 70 ? 'overbought' : rsi < 30 ? 'oversold' : 'normal'}`,\n          children: rsi ? rsi.toFixed(1) : 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-label\",\n          children: \"MACD:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `indicator-value ${macd.value > 0 ? 'bullish' : 'bearish'}`,\n          children: macd.value ? macd.value.toFixed(3) : 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"indicator-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"indicator-label\",\n          children: \"Trend:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `indicator-value ${sma10 && sma20 ? sma10 > sma20 ? 'bullish' : 'bearish' : 'neutral'}`,\n          children: sma10 && sma20 ? sma10 > sma20 ? '↗ Bullish' : '↘ Bearish' : 'Neutral'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n};\n\n// Chart Statistics Component\n_c4 = TechnicalIndicators;\nconst ChartStatistics = ({\n  data\n}) => {\n  if (!data || data.length < 2) return null;\n  const prices = data.map(d => d.close).filter(p => !isNaN(p));\n  const volumes = data.map(d => d.volume).filter(v => !isNaN(v));\n  const priceStats = {\n    high: Math.max(...prices),\n    low: Math.min(...prices),\n    current: prices[prices.length - 1],\n    change: prices[prices.length - 1] - prices[0],\n    changePercent: (prices[prices.length - 1] - prices[0]) / prices[0] * 100\n  };\n  const volumeStats = {\n    total: volumes.reduce((sum, vol) => sum + vol, 0),\n    average: volumes.reduce((sum, vol) => sum + vol, 0) / volumes.length,\n    max: Math.max(...volumes)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Market Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Period High:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: [\"$\", priceStats.high.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Period Low:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: [\"$\", priceStats.low.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Price Change:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `stat-value ${priceStats.change >= 0 ? 'positive' : 'negative'}`,\n          children: [priceStats.change >= 0 ? '+' : '', priceStats.change.toFixed(2), \" (\", priceStats.changePercent.toFixed(2), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Avg Volume:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: [(volumeStats.average / 1000000).toFixed(1), \"M\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Total Volume:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: [(volumeStats.total / 1000000).toFixed(0), \"M\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Data Points:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: data.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 420,\n    columnNumber: 5\n  }, this);\n};\n_c5 = ChartStatistics;\nexport default Charts;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Charts\");\n$RefreshReg$(_c2, \"PriceChart\");\n$RefreshReg$(_c3, \"VolumeChart\");\n$RefreshReg$(_c4, \"TechnicalIndicators\");\n$RefreshReg$(_c5, \"ChartStatistics\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useMarketData","jsxDEV","_jsxDEV","Fragment","_Fragment","Charts","_s","selectedSymbol","setSelectedSymbol","timeframe","setTimeframe","chartType","setChartType","data","marketData","loading","error","processedData","Array","isArray","generateMockData","validData","filter","item","timestamp","close","isNaN","map","Date","date","toLocaleDateString","time","toLocaleTimeString","hour","minute","sort","a","b","length","symbols","timeframes","value","label","chartTypes","symbol","count","mockData","basePrice","Math","random","currentPrice","now","i","priceChange","max","push","open","high","low","volume","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","tf","ct","message","PriceChart","VolumeChart","TechnicalIndicators","ChartStatistics","_c","_data$","_data$Math$floor","_data","prices","d","price","maxPrice","minPrice","min","priceRange","priceChangePercent","toFixed","point","index","_point$open","_point$high","_point$low","_point$volume","height","isPositive","style","backgroundColor","opacity","title","toLocaleString","_c2","volumes","vol","maxVolume","totalVolume","reduce","sum","avgVolume","_c3","_data2","calculateSMA","period","recentData","slice","acc","calculateRSI","gains","losses","change","avgGain","avgLoss","rs","calculateMACD","signal","ema12","calculateEMA","ema26","macdLine","multiplier","ema","sma10","sma20","rsi","macd","_c4","p","v","priceStats","current","changePercent","volumeStats","total","average","_c5","$RefreshReg$"],"sources":["C:/Users/Ayush Goel/OneDrive/Desktop/DEPLOYED/STOCKMARKET/frontend/src/components/DataVisualization/Charts.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useMarketData } from '../../hooks/useMarketData';\r\nimport './Charts.css';\r\n\r\nconst Charts = () => {\r\n  const [selectedSymbol, setSelectedSymbol] = useState('AAPL');\r\n  const [timeframe, setTimeframe] = useState('1d');\r\n  const [chartType, setChartType] = useState('price'); // 'price', 'volume', 'combined'\r\n  \r\n  const { data: marketData, loading, error } = useMarketData(selectedSymbol, timeframe);\r\n\r\n  // Process and validate data\r\n  const processedData = useMemo(() => {\r\n    if (!marketData || !Array.isArray(marketData)) {\r\n      return generateMockData(selectedSymbol, 50);\r\n    }\r\n\r\n    const validData = marketData\r\n      .filter(item => item && \r\n        item.timestamp && \r\n        typeof item.close === 'number' && \r\n        !isNaN(item.close)\r\n      )\r\n      .map(item => ({\r\n        ...item,\r\n        timestamp: new Date(item.timestamp),\r\n        date: new Date(item.timestamp).toLocaleDateString(),\r\n        time: new Date(item.timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n      }))\r\n      .sort((a, b) => a.timestamp - b.timestamp);\r\n\r\n    return validData.length > 0 ? validData : generateMockData(selectedSymbol, 50);\r\n  }, [marketData, selectedSymbol]);\r\n\r\n  const symbols = ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA', 'NVDA', 'META'];\r\n  const timeframes = [\r\n    { value: '1h', label: '1 Hour' },\r\n    { value: '1d', label: '1 Day' },\r\n    { value: '1w', label: '1 Week' },\r\n    { value: '1m', label: '1 Month' }\r\n  ];\r\n  const chartTypes = [\r\n    { value: 'price', label: 'Price Chart' },\r\n    { value: 'volume', label: 'Volume Chart' },\r\n    { value: 'combined', label: 'Combined View' }\r\n  ];\r\n\r\n  // Generate mock data fallback\r\n  function generateMockData(symbol, count = 50) {\r\n    const mockData = [];\r\n    const basePrice = 100 + Math.random() * 100;\r\n    let currentPrice = basePrice;\r\n    const now = new Date();\r\n    \r\n    for (let i = 0; i < count; i++) {\r\n      const priceChange = (Math.random() - 0.5) * 3;\r\n      currentPrice = Math.max(1, currentPrice + priceChange); // Ensure price doesn't go below 1\r\n      \r\n      const timestamp = new Date(now - (count - i) * 5 * 60 * 1000);\r\n      \r\n      mockData.push({\r\n        symbol,\r\n        timestamp,\r\n        date: timestamp.toLocaleDateString(),\r\n        time: timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n        open: Math.max(1, currentPrice - Math.random() * 2),\r\n        high: Math.max(1, currentPrice + Math.random() * 3),\r\n        low: Math.max(1, currentPrice - Math.random() * 3),\r\n        close: Math.max(1, currentPrice),\r\n        volume: Math.floor(1000000 + Math.random() * 9000000)\r\n      });\r\n    }\r\n    \r\n    return mockData;\r\n  }\r\n\r\n  return (\r\n    <div className=\"charts-container\">\r\n      <div className=\"charts-header\">\r\n        <h2>Market Charts</h2>\r\n        <div className=\"chart-controls\">\r\n          <div className=\"control-group\">\r\n            <label>Symbol:</label>\r\n            <select\r\n              value={selectedSymbol}\r\n              onChange={(e) => setSelectedSymbol(e.target.value)}\r\n              className=\"chart-select\"\r\n            >\r\n              {symbols.map(symbol => (\r\n                <option key={symbol} value={symbol}>{symbol}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"control-group\">\r\n            <label>Timeframe:</label>\r\n            <select\r\n              value={timeframe}\r\n              onChange={(e) => setTimeframe(e.target.value)}\r\n              className=\"chart-select\"\r\n            >\r\n              {timeframes.map(tf => (\r\n                <option key={tf.value} value={tf.value}>{tf.label}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"control-group\">\r\n            <label>Chart Type:</label>\r\n            <select\r\n              value={chartType}\r\n              onChange={(e) => setChartType(e.target.value)}\r\n              className=\"chart-select\"\r\n            >\r\n              {chartTypes.map(ct => (\r\n                <option key={ct.value} value={ct.value}>{ct.label}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chart-content\">\r\n        {loading && (\r\n          <div className=\"loading-state\">\r\n            <div className=\"spinner\"></div>\r\n            <p>Loading market data for {selectedSymbol}...</p>\r\n          </div>\r\n        )}\r\n        \r\n        {error && (\r\n          <div className=\"error-state\">\r\n            <div className=\"error-icon\">⚠️</div>\r\n            <h3>Unable to load real-time data</h3>\r\n            <p>Showing demo data for {selectedSymbol}</p>\r\n            <small>Error: {error.message || error}</small>\r\n          </div>\r\n        )}\r\n\r\n        {!loading && processedData.length > 0 && (\r\n          <>\r\n            {chartType === 'price' && (\r\n              <PriceChart data={processedData} symbol={selectedSymbol} />\r\n            )}\r\n            \r\n            {chartType === 'volume' && (\r\n              <VolumeChart data={processedData} symbol={selectedSymbol} />\r\n            )}\r\n            \r\n            {chartType === 'combined' && (\r\n              <div className=\"combined-charts\">\r\n                <PriceChart data={processedData} symbol={selectedSymbol} />\r\n                <VolumeChart data={processedData} symbol={selectedSymbol} />\r\n              </div>\r\n            )}\r\n            \r\n            <TechnicalIndicators data={processedData} symbol={selectedSymbol} />\r\n            <ChartStatistics data={processedData} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Price Chart Component\r\nconst PriceChart = ({ data, symbol }) => {\r\n  if (!data || data.length === 0) return null;\r\n\r\n  const prices = data.map(d => d.close).filter(price => !isNaN(price));\r\n  if (prices.length === 0) return null;\r\n\r\n  const maxPrice = Math.max(...prices);\r\n  const minPrice = Math.min(...prices);\r\n  const priceRange = maxPrice - minPrice || 1; // Avoid division by zero\r\n\r\n  const priceChange = data.length > 1 ? prices[prices.length - 1] - prices[0] : 0;\r\n  const priceChangePercent = data.length > 1 ? (priceChange / prices[0]) * 100 : 0;\r\n\r\n  return (\r\n    <div className=\"chart-card\">\r\n      <div className=\"chart-header\">\r\n        <h3>{symbol} Price Chart</h3>\r\n        <div className={`price-change ${priceChange >= 0 ? 'positive' : 'negative'}`}>\r\n          {priceChange >= 0 ? '↗' : '↘'} ${priceChange.toFixed(2)} ({priceChangePercent.toFixed(2)}%)\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"price-chart-container\">\r\n        <div className=\"chart-y-axis\">\r\n          <span>${maxPrice.toFixed(2)}</span>\r\n          <span>${((maxPrice + minPrice) / 2).toFixed(2)}</span>\r\n          <span>${minPrice.toFixed(2)}</span>\r\n        </div>\r\n        \r\n        <div className=\"chart-main\">\r\n          <div className=\"chart-bars\">\r\n            {data.map((point, index) => {\r\n              if (isNaN(point.close)) return null;\r\n              \r\n              const height = 100 - ((point.close - minPrice) / priceRange) * 100;\r\n              const isPositive = point.close >= (point.open || point.close);\r\n              \r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"chart-bar\"\r\n                  style={{\r\n                    height: `${Math.max(1, height)}%`, // Ensure minimum height\r\n                    backgroundColor: isPositive ? '#10b981' : '#ef4444',\r\n                    opacity: 0.7 + (index / data.length) * 0.3 // Gradient effect\r\n                  }}\r\n                  title={`$${point.close.toFixed(2)}\r\nOpen: $${point.open?.toFixed(2) || point.close.toFixed(2)}\r\nHigh: $${point.high?.toFixed(2) || point.close.toFixed(2)}\r\nLow: $${point.low?.toFixed(2) || point.close.toFixed(2)}\r\nVolume: ${point.volume?.toLocaleString() || 'N/A'}\r\n${point.date} ${point.time}`}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"chart-x-axis\">\r\n        <span>{data[0]?.date}</span>\r\n        <span>{data[Math.floor(data.length / 2)]?.date}</span>\r\n        <span>{data[data.length - 1]?.date}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Volume Chart Component\r\nconst VolumeChart = ({ data, symbol }) => {\r\n  if (!data || data.length === 0) return null;\r\n\r\n  const volumes = data.map(d => d.volume).filter(vol => !isNaN(vol));\r\n  if (volumes.length === 0) return null;\r\n\r\n  const maxVolume = Math.max(...volumes);\r\n  const totalVolume = volumes.reduce((sum, vol) => sum + vol, 0);\r\n  const avgVolume = totalVolume / volumes.length;\r\n\r\n  return (\r\n    <div className=\"chart-card\">\r\n      <div className=\"chart-header\">\r\n        <h3>{symbol} Trading Volume</h3>\r\n        <div className=\"volume-stats\">\r\n          Avg: {(avgVolume / 1000000).toFixed(1)}M | Total: {(totalVolume / 1000000).toFixed(0)}M\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"volume-chart-container\">\r\n        <div className=\"volume-bars\">\r\n          {data.map((point, index) => {\r\n            if (!point.volume || isNaN(point.volume)) return null;\r\n            \r\n            const height = (point.volume / maxVolume) * 100;\r\n            const isPositive = point.close >= (point.open || point.close);\r\n            \r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"volume-bar\"\r\n                style={{\r\n                  height: `${Math.max(1, height)}%`,\r\n                  backgroundColor: isPositive ? '#10b981' : '#ef4444',\r\n                  opacity: 0.6\r\n                }}\r\n                title={`Volume: ${point.volume.toLocaleString()}\r\n${point.date} ${point.time}`}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Technical Indicators Component\r\nconst TechnicalIndicators = ({ data, symbol }) => {\r\n  if (!data || data.length < 5) return null;\r\n\r\n  // Calculate Simple Moving Average\r\n  const calculateSMA = (period = 10) => {\r\n    if (data.length < period) return null;\r\n    const recentData = data.slice(-period);\r\n    const sum = recentData.reduce((acc, point) => acc + point.close, 0);\r\n    return sum / period;\r\n  };\r\n\r\n  // Calculate RSI\r\n  const calculateRSI = (period = 14) => {\r\n    if (data.length < period + 1) return 50;\r\n    \r\n    let gains = 0;\r\n    let losses = 0;\r\n    \r\n    for (let i = 1; i <= period; i++) {\r\n      const change = data[i].close - data[i - 1].close;\r\n      if (change > 0) gains += change;\r\n      else losses -= change;\r\n    }\r\n    \r\n    const avgGain = gains / period;\r\n    const avgLoss = losses / period || 1; // Avoid division by zero\r\n    \r\n    const rs = avgGain / avgLoss;\r\n    return 100 - (100 / (1 + rs));\r\n  };\r\n\r\n  // Calculate MACD (simplified)\r\n  const calculateMACD = () => {\r\n    if (data.length < 26) return { value: 0, signal: 0 };\r\n    \r\n    const ema12 = calculateEMA(12);\r\n    const ema26 = calculateEMA(26);\r\n    const macdLine = ema12 - ema26;\r\n    \r\n    return {\r\n      value: macdLine,\r\n      signal: macdLine > 0 ? 'BULLISH' : 'BEARISH'\r\n    };\r\n  };\r\n\r\n  const calculateEMA = (period) => {\r\n    const multiplier = 2 / (period + 1);\r\n    let ema = data[0].close;\r\n    \r\n    for (let i = 1; i < data.length; i++) {\r\n      ema = (data[i].close - ema) * multiplier + ema;\r\n    }\r\n    \r\n    return ema;\r\n  };\r\n\r\n  const sma10 = calculateSMA(10);\r\n  const sma20 = calculateSMA(20);\r\n  const rsi = calculateRSI();\r\n  const macd = calculateMACD();\r\n  const currentPrice = data[data.length - 1]?.close;\r\n\r\n  return (\r\n    <div className=\"chart-card\">\r\n      <h3>Technical Indicators - {symbol}</h3>\r\n      <div className=\"indicators-grid\">\r\n        <div className=\"indicator-item\">\r\n          <span className=\"indicator-label\">Current Price:</span>\r\n          <span className=\"indicator-value\">${currentPrice?.toFixed(2) || 'N/A'}</span>\r\n        </div>\r\n        \r\n        <div className=\"indicator-item\">\r\n          <span className=\"indicator-label\">SMA (10):</span>\r\n          <span className=\"indicator-value\">\r\n            {sma10 ? `$${sma10.toFixed(2)}` : 'N/A'}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"indicator-item\">\r\n          <span className=\"indicator-label\">SMA (20):</span>\r\n          <span className=\"indicator-value\">\r\n            {sma20 ? `$${sma20.toFixed(2)}` : 'N/A'}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"indicator-item\">\r\n          <span className=\"indicator-label\">RSI (14):</span>\r\n          <span className={`indicator-value ${\r\n            rsi > 70 ? 'overbought' : rsi < 30 ? 'oversold' : 'normal'\r\n          }`}>\r\n            {rsi ? rsi.toFixed(1) : 'N/A'}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"indicator-item\">\r\n          <span className=\"indicator-label\">MACD:</span>\r\n          <span className={`indicator-value ${macd.value > 0 ? 'bullish' : 'bearish'}`}>\r\n            {macd.value ? macd.value.toFixed(3) : 'N/A'}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"indicator-item\">\r\n          <span className=\"indicator-label\">Trend:</span>\r\n          <span className={`indicator-value ${\r\n            sma10 && sma20 ? (sma10 > sma20 ? 'bullish' : 'bearish') : 'neutral'\r\n          }`}>\r\n            {sma10 && sma20 ? (sma10 > sma20 ? '↗ Bullish' : '↘ Bearish') : 'Neutral'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Chart Statistics Component\r\nconst ChartStatistics = ({ data }) => {\r\n  if (!data || data.length < 2) return null;\r\n\r\n  const prices = data.map(d => d.close).filter(p => !isNaN(p));\r\n  const volumes = data.map(d => d.volume).filter(v => !isNaN(v));\r\n\r\n  const priceStats = {\r\n    high: Math.max(...prices),\r\n    low: Math.min(...prices),\r\n    current: prices[prices.length - 1],\r\n    change: prices[prices.length - 1] - prices[0],\r\n    changePercent: ((prices[prices.length - 1] - prices[0]) / prices[0]) * 100\r\n  };\r\n\r\n  const volumeStats = {\r\n    total: volumes.reduce((sum, vol) => sum + vol, 0),\r\n    average: volumes.reduce((sum, vol) => sum + vol, 0) / volumes.length,\r\n    max: Math.max(...volumes)\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-card\">\r\n      <h3>Market Statistics</h3>\r\n      <div className=\"statistics-grid\">\r\n        <div className=\"stat-item\">\r\n          <span className=\"stat-label\">Period High:</span>\r\n          <span className=\"stat-value\">${priceStats.high.toFixed(2)}</span>\r\n        </div>\r\n        <div className=\"stat-item\">\r\n          <span className=\"stat-label\">Period Low:</span>\r\n          <span className=\"stat-value\">${priceStats.low.toFixed(2)}</span>\r\n        </div>\r\n        <div className=\"stat-item\">\r\n          <span className=\"stat-label\">Price Change:</span>\r\n          <span className={`stat-value ${priceStats.change >= 0 ? 'positive' : 'negative'}`}>\r\n            {priceStats.change >= 0 ? '+' : ''}{priceStats.change.toFixed(2)} ({priceStats.changePercent.toFixed(2)}%)\r\n          </span>\r\n        </div>\r\n        <div className=\"stat-item\">\r\n          <span className=\"stat-label\">Avg Volume:</span>\r\n          <span className=\"stat-value\">{(volumeStats.average / 1000000).toFixed(1)}M</span>\r\n        </div>\r\n        <div className=\"stat-item\">\r\n          <span className=\"stat-label\">Total Volume:</span>\r\n          <span className=\"stat-value\">{(volumeStats.total / 1000000).toFixed(0)}M</span>\r\n        </div>\r\n        <div className=\"stat-item\">\r\n          <span className=\"stat-label\">Data Points:</span>\r\n          <span className=\"stat-value\">{data.length}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}