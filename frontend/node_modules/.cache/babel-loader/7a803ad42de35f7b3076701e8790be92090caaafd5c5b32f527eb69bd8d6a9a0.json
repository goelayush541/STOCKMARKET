{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n    this.pendingRequests = new Map();\n    this.maxConcurrentRequests = 6;\n    this.activeRequests = 0;\n  }\n  async request(endpoint, options = {}) {\n    // Check if this is a duplicate request\n    if (this.pendingRequests.has(endpoint)) {\n      console.warn(`Duplicate request prevented: ${endpoint}`);\n      return this.pendingRequests.get(endpoint);\n    }\n\n    // Wait if too many concurrent requests\n    if (this.activeRequests >= this.maxConcurrentRequests) {\n      await new Promise(resolve => setTimeout(resolve, 100));\n      return this.request(endpoint, options);\n    }\n    const url = `${this.baseURL}${endpoint}`;\n    const token = localStorage.getItem('token');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...options.headers\n    };\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 15000);\n    const config = {\n      ...options,\n      headers,\n      signal: controller.signal\n    };\n    this.activeRequests++;\n    const requestPromise = (async () => {\n      try {\n        const response = await fetch(url, config);\n        clearTimeout(timeoutId);\n\n        // Handle HTTP errors\n        if (!response.ok) {\n          if (response.status === 401) {\n            localStorage.removeItem('token');\n            window.location.reload();\n            throw new Error('Authentication failed. Please login again.');\n          }\n          let errorMessage = `HTTP error! status: ${response.status}`;\n          try {\n            const errorData = await response.json();\n            errorMessage = errorData.message || errorData.error || errorMessage;\n          } catch (e) {\n            errorMessage = response.statusText || errorMessage;\n          }\n          throw new Error(errorMessage);\n        }\n        return await response.json();\n      } catch (error) {\n        console.error('API request failed:', error);\n        if (error.name === 'AbortError') {\n          throw new Error('Request timeout - server is not responding');\n        } else if (error.name === 'TypeError' && error.message === 'Failed to fetch') {\n          if (endpoint.includes('/api/signals')) {\n            await new Promise(resolve => setTimeout(resolve, 1000));\n            return this.request(endpoint, options);\n          }\n          throw new Error('Network error - please check your connection');\n        }\n        throw error;\n      } finally {\n        this.activeRequests--;\n        this.pendingRequests.delete(endpoint);\n        clearTimeout(timeoutId);\n      }\n    })();\n    this.pendingRequests.set(endpoint, requestPromise);\n    return requestPromise;\n  }\n\n  // Auth endpoints\n  async login(email, password) {\n    return this.request('/api/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n  }\n  async register(userData) {\n    return this.request('/api/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  }\n  async logout() {\n    return this.request('/api/auth/logout', {\n      method: 'POST'\n    });\n  }\n  async verifyToken() {\n    return this.request('/api/auth/verify');\n  }\n\n  // User endpoints\n  async getUserProfile() {\n    try {\n      return await this.request('/api/user/profile');\n    } catch (error) {\n      console.error('Failed to get user profile:', error);\n      return {\n        user: {\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'john.doe@example.com',\n          preferences: {\n            alerts: {\n              email: true,\n              push: false\n            },\n            defaultSymbols: ['AAPL', 'MSFT', 'GOOGL'],\n            riskTolerance: 'medium'\n          }\n        }\n      };\n    }\n  }\n  async updateUserProfile(updates) {\n    return this.request('/api/user/profile', {\n      method: 'PUT',\n      body: JSON.stringify(updates)\n    });\n  }\n\n  // Signals endpoints with optimized caching\n  async getSignals(params = {}) {\n    const cacheKey = `signals-${JSON.stringify(params)}`;\n    const cache = sessionStorage.getItem(cacheKey);\n    if (cache) {\n      try {\n        const {\n          data,\n          timestamp\n        } = JSON.parse(cache);\n        if (Date.now() - timestamp < 30000) {\n          return data;\n        }\n      } catch (e) {\n        // Cache is invalid\n      }\n    }\n    try {\n      const queryString = new URLSearchParams(params).toString();\n      const response = await this.request(`/api/signals?${queryString}`);\n      let signals = [];\n      if (Array.isArray(response)) {\n        signals = response;\n      } else if (response && Array.isArray(response.signals)) {\n        signals = response.signals;\n      } else if (response && response.pagination) {\n        signals = response.signals || [];\n      }\n      sessionStorage.setItem(cacheKey, JSON.stringify({\n        data: signals,\n        timestamp: Date.now()\n      }));\n      return signals;\n    } catch (error) {\n      console.error('Failed to get signals:', error);\n      if (cache) {\n        try {\n          const {\n            data\n          } = JSON.parse(cache);\n          return data;\n        } catch (e) {\n          // Cache is invalid\n        }\n      }\n      return [];\n    }\n  }\n  async getSignal(id) {\n    try {\n      return await this.request(`/api/signals/${id}`);\n    } catch (error) {\n      console.error('Failed to get signal:', error);\n      return null;\n    }\n  }\n\n  // News endpoints with caching\n  async getNews(params = {}) {\n    const cacheKey = `news-${JSON.stringify(params)}`;\n    const cache = sessionStorage.getItem(cacheKey);\n    if (cache) {\n      try {\n        const {\n          data,\n          timestamp\n        } = JSON.parse(cache);\n        if (Date.now() - timestamp < 60000) {\n          return data;\n        }\n      } catch (e) {\n        // Cache is invalid\n      }\n    }\n    try {\n      const queryString = new URLSearchParams(params).toString();\n      const response = await this.request(`/api/news?${queryString}`);\n      let news = [];\n      if (Array.isArray(response)) {\n        news = response;\n      } else if (response && Array.isArray(response.news)) {\n        news = response.news;\n      } else if (response && response.pagination) {\n        news = response.news || [];\n      }\n      sessionStorage.setItem(cacheKey, JSON.stringify({\n        data: news,\n        timestamp: Date.now()\n      }));\n      return news;\n    } catch (error) {\n      console.error('Failed to get news:', error);\n      if (cache) {\n        try {\n          const {\n            data\n          } = JSON.parse(cache);\n          return data;\n        } catch (e) {\n          // Cache is invalid\n        }\n      }\n      return [];\n    }\n  }\n\n  // Market data endpoints with caching and fallback\n  async getMarketData(symbol, period = '1d') {\n    const cacheKey = `market-data-${symbol}-${period}`;\n    const cache = sessionStorage.getItem(cacheKey);\n    if (cache) {\n      try {\n        const {\n          data,\n          timestamp\n        } = JSON.parse(cache);\n        if (Date.now() - timestamp < 60000) {\n          return data;\n        }\n      } catch (e) {\n        // Cache is invalid\n      }\n    }\n    try {\n      const response = await this.request(`/api/market-data/${symbol}?period=${period}`);\n      let marketData = [];\n      if (Array.isArray(response)) {\n        marketData = response;\n      } else if (response && Array.isArray(response.data)) {\n        marketData = response.data;\n      } else {\n        console.warn('Unexpected market data format:', response);\n        marketData = [];\n      }\n      sessionStorage.setItem(cacheKey, JSON.stringify({\n        data: marketData,\n        timestamp: Date.now()\n      }));\n      return marketData;\n    } catch (error) {\n      console.error('Failed to get market data:', error);\n      if (cache) {\n        try {\n          const {\n            data\n          } = JSON.parse(cache);\n          return data;\n        } catch (e) {\n          // Cache is invalid\n        }\n      }\n\n      // Return mock data for development\n      return this.generateMockMarketData(symbol, 20);\n    }\n  }\n\n  // Generate mock market data for fallback\n  generateMockMarketData(symbol, count = 20) {\n    const basePrice = 100 + Math.random() * 500;\n    let currentPrice = basePrice;\n    const data = [];\n    for (let i = 0; i < count; i++) {\n      const priceChange = (Math.random() - 0.5) * 10;\n      currentPrice = Math.max(0.01, currentPrice + priceChange);\n      const volume = 1000000 + Math.random() * 9000000;\n      const open = currentPrice - Math.random() * 2;\n      const high = Math.max(currentPrice, open) + Math.random() * 3;\n      const low = Math.min(currentPrice, open) - Math.random() * 3;\n      const close = currentPrice;\n      data.push({\n        symbol: symbol.toUpperCase(),\n        timestamp: new Date(Date.now() - i * 5 * 60 * 1000),\n        open: parseFloat(open.toFixed(2)),\n        high: parseFloat(high.toFixed(2)),\n        low: parseFloat(low.toFixed(2)),\n        close: parseFloat(close.toFixed(2)),\n        volume: Math.floor(volume),\n        source: 'mock'\n      });\n    }\n    return data.reverse();\n  }\n\n  // Backtesting endpoints\n  async runBacktest(config) {\n    try {\n      return await this.request('/api/backtest', {\n        method: 'POST',\n        body: JSON.stringify(config)\n      });\n    } catch (error) {\n      console.error('Failed to run backtest:', error);\n      throw error;\n    }\n  }\n  async getBacktestResults(id) {\n    try {\n      return await this.request(`/api/backtest/${id}`);\n    } catch (error) {\n      console.error('Failed to get backtest results:', error);\n      return null;\n    }\n  }\n\n  // Portfolio endpoints\n  async getPortfolio() {\n    try {\n      return await this.request('/api/portfolio');\n    } catch (error) {\n      console.error('Failed to get portfolio:', error);\n      return {\n        balance: 100000,\n        initialBalance: 100000,\n        positions: [],\n        performance: {\n          totalReturn: 0,\n          dailyReturn: 0,\n          sharpeRatio: 0,\n          maxDrawdown: 0\n        }\n      };\n    }\n  }\n  async updatePortfolio(updates) {\n    try {\n      return await this.request('/api/portfolio', {\n        method: 'PUT',\n        body: JSON.stringify(updates)\n      });\n    } catch (error) {\n      console.error('Failed to update portfolio:', error);\n      throw error;\n    }\n  }\n\n  // Admin endpoints\n  async getSystemHealth() {\n    try {\n      return await this.request('/api/admin/health');\n    } catch (error) {\n      console.error('Failed to get system health:', error);\n      return {\n        status: 'unknown',\n        timestamp: new Date().toISOString()\n      };\n    }\n  }\n  async getUsageStats() {\n    try {\n      return await this.request('/api/admin/stats');\n    } catch (error) {\n      console.error('Failed to get usage stats:', error);\n      return {\n        users: {\n          total: 0,\n          active: 0\n        },\n        signals: 0,\n        backtests: 0\n      };\n    }\n  }\n\n  // Data ingestion endpoints\n  async ingestMarketData(symbol) {\n    try {\n      return await this.request('/api/data/ingest/market', {\n        method: 'POST',\n        body: JSON.stringify({\n          symbol\n        })\n      });\n    } catch (error) {\n      console.error('Failed to ingest market data:', error);\n      throw error;\n    }\n  }\n  async ingestNewsData(query) {\n    try {\n      return await this.request('/api/data/ingest/news', {\n        method: 'POST',\n        body: JSON.stringify({\n          query\n        })\n      });\n    } catch (error) {\n      console.error('Failed to ingest news data:', error);\n      throw error;\n    }\n  }\n\n  // Utility methods\n  isAuthenticated() {\n    return !!localStorage.getItem('token');\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n  removeToken() {\n    localStorage.removeItem('token');\n  }\n\n  // Cache management\n  clearCache() {\n    Object.keys(sessionStorage).forEach(key => {\n      if (key.startsWith('signals-') || key.startsWith('news-') || key.startsWith('market-data-')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n  }\n\n  // Request management\n  cancelAllRequests() {\n    this.pendingRequests.clear();\n    this.activeRequests = 0;\n  }\n}\nexport const api = new ApiService();\nexport default api;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","baseURL","pendingRequests","Map","maxConcurrentRequests","activeRequests","request","endpoint","options","has","console","warn","get","Promise","resolve","setTimeout","url","token","localStorage","getItem","headers","controller","AbortController","timeoutId","abort","config","signal","requestPromise","response","fetch","clearTimeout","ok","status","removeItem","window","location","reload","Error","errorMessage","errorData","json","message","error","e","statusText","name","includes","delete","set","login","email","password","method","body","JSON","stringify","register","userData","logout","verifyToken","getUserProfile","user","firstName","lastName","preferences","alerts","push","defaultSymbols","riskTolerance","updateUserProfile","updates","getSignals","params","cacheKey","cache","sessionStorage","data","timestamp","parse","Date","now","queryString","URLSearchParams","toString","signals","Array","isArray","pagination","setItem","getSignal","id","getNews","news","getMarketData","symbol","period","marketData","generateMockMarketData","count","basePrice","Math","random","currentPrice","i","priceChange","max","volume","open","high","low","min","close","toUpperCase","parseFloat","toFixed","floor","source","reverse","runBacktest","getBacktestResults","getPortfolio","balance","initialBalance","positions","performance","totalReturn","dailyReturn","sharpeRatio","maxDrawdown","updatePortfolio","getSystemHealth","toISOString","getUsageStats","users","total","active","backtests","ingestMarketData","ingestNewsData","query","isAuthenticated","getToken","setToken","removeToken","clearCache","Object","keys","forEach","key","startsWith","cancelAllRequests","clear","api"],"sources":["C:/Users/Ayush Goel/OneDrive/Desktop/DEPLOYED/STOCKMARKET/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.baseURL = API_BASE_URL;\r\n    this.pendingRequests = new Map();\r\n    this.maxConcurrentRequests = 6;\r\n    this.activeRequests = 0;\r\n  }\r\n\r\n  async request(endpoint, options = {}) {\r\n    // Check if this is a duplicate request\r\n    if (this.pendingRequests.has(endpoint)) {\r\n      console.warn(`Duplicate request prevented: ${endpoint}`);\r\n      return this.pendingRequests.get(endpoint);\r\n    }\r\n\r\n    // Wait if too many concurrent requests\r\n    if (this.activeRequests >= this.maxConcurrentRequests) {\r\n      await new Promise(resolve => setTimeout(resolve, 100));\r\n      return this.request(endpoint, options);\r\n    }\r\n\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    const token = localStorage.getItem('token');\r\n    \r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      ...options.headers\r\n    };\r\n    \r\n    if (token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    \r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), 15000);\r\n    \r\n    const config = {\r\n      ...options,\r\n      headers,\r\n      signal: controller.signal\r\n    };\r\n    \r\n    this.activeRequests++;\r\n    const requestPromise = (async () => {\r\n      try {\r\n        const response = await fetch(url, config);\r\n        clearTimeout(timeoutId);\r\n        \r\n        // Handle HTTP errors\r\n        if (!response.ok) {\r\n          if (response.status === 401) {\r\n            localStorage.removeItem('token');\r\n            window.location.reload();\r\n            throw new Error('Authentication failed. Please login again.');\r\n          }\r\n          \r\n          let errorMessage = `HTTP error! status: ${response.status}`;\r\n          try {\r\n            const errorData = await response.json();\r\n            errorMessage = errorData.message || errorData.error || errorMessage;\r\n          } catch (e) {\r\n            errorMessage = response.statusText || errorMessage;\r\n          }\r\n          \r\n          throw new Error(errorMessage);\r\n        }\r\n        \r\n        return await response.json();\r\n        \r\n      } catch (error) {\r\n        console.error('API request failed:', error);\r\n        \r\n        if (error.name === 'AbortError') {\r\n          throw new Error('Request timeout - server is not responding');\r\n        } else if (error.name === 'TypeError' && error.message === 'Failed to fetch') {\r\n          if (endpoint.includes('/api/signals')) {\r\n            await new Promise(resolve => setTimeout(resolve, 1000));\r\n            return this.request(endpoint, options);\r\n          }\r\n          throw new Error('Network error - please check your connection');\r\n        }\r\n        \r\n        throw error;\r\n      } finally {\r\n        this.activeRequests--;\r\n        this.pendingRequests.delete(endpoint);\r\n        clearTimeout(timeoutId);\r\n      }\r\n    })();\r\n\r\n    this.pendingRequests.set(endpoint, requestPromise);\r\n    return requestPromise;\r\n  }\r\n\r\n  // Auth endpoints\r\n  async login(email, password) {\r\n    return this.request('/api/auth/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ email, password })\r\n    });\r\n  }\r\n\r\n  async register(userData) {\r\n    return this.request('/api/auth/register', {\r\n      method: 'POST',\r\n      body: JSON.stringify(userData)\r\n    });\r\n  }\r\n\r\n  async logout() {\r\n    return this.request('/api/auth/logout', {\r\n      method: 'POST'\r\n    });\r\n  }\r\n\r\n  async verifyToken() {\r\n    return this.request('/api/auth/verify');\r\n  }\r\n\r\n  // User endpoints\r\n  async getUserProfile() {\r\n    try {\r\n      return await this.request('/api/user/profile');\r\n    } catch (error) {\r\n      console.error('Failed to get user profile:', error);\r\n      return {\r\n        user: {\r\n          firstName: 'John',\r\n          lastName: 'Doe',\r\n          email: 'john.doe@example.com',\r\n          preferences: {\r\n            alerts: { email: true, push: false },\r\n            defaultSymbols: ['AAPL', 'MSFT', 'GOOGL'],\r\n            riskTolerance: 'medium'\r\n          }\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  async updateUserProfile(updates) {\r\n    return this.request('/api/user/profile', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(updates)\r\n    });\r\n  }\r\n\r\n  // Signals endpoints with optimized caching\r\n  async getSignals(params = {}) {\r\n    const cacheKey = `signals-${JSON.stringify(params)}`;\r\n    const cache = sessionStorage.getItem(cacheKey);\r\n    \r\n    if (cache) {\r\n      try {\r\n        const { data, timestamp } = JSON.parse(cache);\r\n        if (Date.now() - timestamp < 30000) {\r\n          return data;\r\n        }\r\n      } catch (e) {\r\n        // Cache is invalid\r\n      }\r\n    }\r\n    \r\n    try {\r\n      const queryString = new URLSearchParams(params).toString();\r\n      const response = await this.request(`/api/signals?${queryString}`);\r\n      \r\n      let signals = [];\r\n      if (Array.isArray(response)) {\r\n        signals = response;\r\n      } else if (response && Array.isArray(response.signals)) {\r\n        signals = response.signals;\r\n      } else if (response && response.pagination) {\r\n        signals = response.signals || [];\r\n      }\r\n      \r\n      sessionStorage.setItem(cacheKey, JSON.stringify({\r\n        data: signals,\r\n        timestamp: Date.now()\r\n      }));\r\n      \r\n      return signals;\r\n    } catch (error) {\r\n      console.error('Failed to get signals:', error);\r\n      \r\n      if (cache) {\r\n        try {\r\n          const { data } = JSON.parse(cache);\r\n          return data;\r\n        } catch (e) {\r\n          // Cache is invalid\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getSignal(id) {\r\n    try {\r\n      return await this.request(`/api/signals/${id}`);\r\n    } catch (error) {\r\n      console.error('Failed to get signal:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // News endpoints with caching\r\n  async getNews(params = {}) {\r\n    const cacheKey = `news-${JSON.stringify(params)}`;\r\n    const cache = sessionStorage.getItem(cacheKey);\r\n    \r\n    if (cache) {\r\n      try {\r\n        const { data, timestamp } = JSON.parse(cache);\r\n        if (Date.now() - timestamp < 60000) {\r\n          return data;\r\n        }\r\n      } catch (e) {\r\n        // Cache is invalid\r\n      }\r\n    }\r\n    \r\n    try {\r\n      const queryString = new URLSearchParams(params).toString();\r\n      const response = await this.request(`/api/news?${queryString}`);\r\n      \r\n      let news = [];\r\n      if (Array.isArray(response)) {\r\n        news = response;\r\n      } else if (response && Array.isArray(response.news)) {\r\n        news = response.news;\r\n      } else if (response && response.pagination) {\r\n        news = response.news || [];\r\n      }\r\n      \r\n      sessionStorage.setItem(cacheKey, JSON.stringify({\r\n        data: news,\r\n        timestamp: Date.now()\r\n      }));\r\n      \r\n      return news;\r\n    } catch (error) {\r\n      console.error('Failed to get news:', error);\r\n      \r\n      if (cache) {\r\n        try {\r\n          const { data } = JSON.parse(cache);\r\n          return data;\r\n        } catch (e) {\r\n          // Cache is invalid\r\n        }\r\n      }\r\n      \r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Market data endpoints with caching and fallback\r\n  async getMarketData(symbol, period = '1d') {\r\n    const cacheKey = `market-data-${symbol}-${period}`;\r\n    const cache = sessionStorage.getItem(cacheKey);\r\n    \r\n    if (cache) {\r\n      try {\r\n        const { data, timestamp } = JSON.parse(cache);\r\n        if (Date.now() - timestamp < 60000) {\r\n          return data;\r\n        }\r\n      } catch (e) {\r\n        // Cache is invalid\r\n      }\r\n    }\r\n    \r\n    try {\r\n      const response = await this.request(`/api/market-data/${symbol}?period=${period}`);\r\n      \r\n      let marketData = [];\r\n      if (Array.isArray(response)) {\r\n        marketData = response;\r\n      } else if (response && Array.isArray(response.data)) {\r\n        marketData = response.data;\r\n      } else {\r\n        console.warn('Unexpected market data format:', response);\r\n        marketData = [];\r\n      }\r\n      \r\n      sessionStorage.setItem(cacheKey, JSON.stringify({\r\n        data: marketData,\r\n        timestamp: Date.now()\r\n      }));\r\n      \r\n      return marketData;\r\n    } catch (error) {\r\n      console.error('Failed to get market data:', error);\r\n      \r\n      if (cache) {\r\n        try {\r\n          const { data } = JSON.parse(cache);\r\n          return data;\r\n        } catch (e) {\r\n          // Cache is invalid\r\n        }\r\n      }\r\n      \r\n      // Return mock data for development\r\n      return this.generateMockMarketData(symbol, 20);\r\n    }\r\n  }\r\n\r\n  // Generate mock market data for fallback\r\n  generateMockMarketData(symbol, count = 20) {\r\n    const basePrice = 100 + Math.random() * 500;\r\n    let currentPrice = basePrice;\r\n    const data = [];\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      const priceChange = (Math.random() - 0.5) * 10;\r\n      currentPrice = Math.max(0.01, currentPrice + priceChange);\r\n      const volume = 1000000 + Math.random() * 9000000;\r\n      \r\n      const open = currentPrice - Math.random() * 2;\r\n      const high = Math.max(currentPrice, open) + Math.random() * 3;\r\n      const low = Math.min(currentPrice, open) - Math.random() * 3;\r\n      const close = currentPrice;\r\n\r\n      data.push({\r\n        symbol: symbol.toUpperCase(),\r\n        timestamp: new Date(Date.now() - i * 5 * 60 * 1000),\r\n        open: parseFloat(open.toFixed(2)),\r\n        high: parseFloat(high.toFixed(2)),\r\n        low: parseFloat(low.toFixed(2)),\r\n        close: parseFloat(close.toFixed(2)),\r\n        volume: Math.floor(volume),\r\n        source: 'mock'\r\n      });\r\n    }\r\n\r\n    return data.reverse();\r\n  }\r\n\r\n  // Backtesting endpoints\r\n  async runBacktest(config) {\r\n    try {\r\n      return await this.request('/api/backtest', {\r\n        method: 'POST',\r\n        body: JSON.stringify(config)\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to run backtest:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getBacktestResults(id) {\r\n    try {\r\n      return await this.request(`/api/backtest/${id}`);\r\n    } catch (error) {\r\n      console.error('Failed to get backtest results:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Portfolio endpoints\r\n  async getPortfolio() {\r\n    try {\r\n      return await this.request('/api/portfolio');\r\n    } catch (error) {\r\n      console.error('Failed to get portfolio:', error);\r\n      return {\r\n        balance: 100000,\r\n        initialBalance: 100000,\r\n        positions: [],\r\n        performance: {\r\n          totalReturn: 0,\r\n          dailyReturn: 0,\r\n          sharpeRatio: 0,\r\n          maxDrawdown: 0\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  async updatePortfolio(updates) {\r\n    try {\r\n      return await this.request('/api/portfolio', {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updates)\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to update portfolio:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Admin endpoints\r\n  async getSystemHealth() {\r\n    try {\r\n      return await this.request('/api/admin/health');\r\n    } catch (error) {\r\n      console.error('Failed to get system health:', error);\r\n      return { status: 'unknown', timestamp: new Date().toISOString() };\r\n    }\r\n  }\r\n\r\n  async getUsageStats() {\r\n    try {\r\n      return await this.request('/api/admin/stats');\r\n    } catch (error) {\r\n      console.error('Failed to get usage stats:', error);\r\n      return { users: { total: 0, active: 0 }, signals: 0, backtests: 0 };\r\n    }\r\n  }\r\n\r\n  // Data ingestion endpoints\r\n  async ingestMarketData(symbol) {\r\n    try {\r\n      return await this.request('/api/data/ingest/market', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ symbol })\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to ingest market data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async ingestNewsData(query) {\r\n    try {\r\n      return await this.request('/api/data/ingest/news', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ query })\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to ingest news data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Utility methods\r\n  isAuthenticated() {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  setToken(token) {\r\n    localStorage.setItem('token', token);\r\n  }\r\n\r\n  removeToken() {\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  // Cache management\r\n  clearCache() {\r\n    Object.keys(sessionStorage).forEach(key => {\r\n      if (key.startsWith('signals-') || key.startsWith('news-') || key.startsWith('market-data-')) {\r\n        sessionStorage.removeItem(key);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Request management\r\n  cancelAllRequests() {\r\n    this.pendingRequests.clear();\r\n    this.activeRequests = 0;\r\n  }\r\n}\r\n\r\nexport const api = new ApiService();\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}