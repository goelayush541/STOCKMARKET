{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush Goel\\\\OneDrive\\\\Desktop\\\\DEPLOYED\\\\STOCKMARKET\\\\frontend\\\\src\\\\contexts\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\nimport { useAuth } from './AuthContext';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nconst appReducer = (state, action) => {\n  var _action$payload, _action$payload2, _action$payload3, _action$payload4;\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload\n      };\n    case 'SET_SIGNALS':\n      // Handle different response formats and ensure array\n      const signals = Array.isArray(action.payload) ? action.payload : (_action$payload = action.payload) !== null && _action$payload !== void 0 && _action$payload.signals ? action.payload.signals : (_action$payload2 = action.payload) !== null && _action$payload2 !== void 0 && _action$payload2.data ? action.payload.data : [];\n      return {\n        ...state,\n        signals\n      };\n    case 'SET_MARKET_DATA':\n      return {\n        ...state,\n        marketData: action.payload\n      };\n    case 'SET_NEWS':\n      // Handle different response formats and ensure array\n      const news = Array.isArray(action.payload) ? action.payload : (_action$payload3 = action.payload) !== null && _action$payload3 !== void 0 && _action$payload3.news ? action.payload.news : (_action$payload4 = action.payload) !== null && _action$payload4 !== void 0 && _action$payload4.data ? action.payload.data : [];\n      return {\n        ...state,\n        news\n      };\n    case 'SET_USER_PREFERENCES':\n      return {\n        ...state,\n        userPreferences: action.payload\n      };\n    case 'SET_PORTFOLIO':\n      return {\n        ...state,\n        portfolio: action.payload\n      };\n    case 'ADD_ALERT':\n      return {\n        ...state,\n        alerts: [...state.alerts, action.payload]\n      };\n    case 'REMOVE_ALERT':\n      return {\n        ...state,\n        alerts: state.alerts.filter(alert => alert.id !== action.payload)\n      };\n    case 'CLEAR_ALERTS':\n      return {\n        ...state,\n        alerts: []\n      };\n    case 'SET_BACKTEST_RESULTS':\n      return {\n        ...state,\n        backtestResults: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  loading: false,\n  error: null,\n  signals: [],\n  marketData: {},\n  news: [],\n  userPreferences: null,\n  portfolio: null,\n  backtestResults: null,\n  alerts: []\n};\nexport const useApp = () => {\n  _s();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n_s(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AppProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n\n  // Load user preferences when user authenticates\n  const loadUserPreferences = useCallback(async () => {\n    if (!isAuthenticated) return;\n    try {\n      var _response$user;\n      const response = await api.getUserProfile();\n      // Handle both direct preferences object and nested user.preferences\n      const preferences = response.preferences || ((_response$user = response.user) === null || _response$user === void 0 ? void 0 : _response$user.preferences) || null;\n      dispatch({\n        type: 'SET_USER_PREFERENCES',\n        payload: preferences\n      });\n    } catch (error) {\n      console.error('Failed to load user preferences:', error);\n      // Set default preferences if API fails\n      dispatch({\n        type: 'SET_USER_PREFERENCES',\n        payload: {\n          alerts: {\n            email: true,\n            push: false\n          },\n          defaultSymbols: ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA'],\n          riskTolerance: 'medium'\n        }\n      });\n    }\n  }, [isAuthenticated]);\n\n  // Load initial data when user authenticates\n  const loadInitialData = useCallback(async () => {\n    if (!isAuthenticated) return;\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      dispatch({\n        type: 'SET_ERROR',\n        payload: null\n      });\n\n      // Load data in parallel for better performance\n      const [signalsData, newsData, portfolioData] = await Promise.all([api.getSignals({\n        limit: 20\n      }), api.getNews({\n        limit: 10\n      }), api.getPortfolio()]);\n      dispatch({\n        type: 'SET_SIGNALS',\n        payload: signalsData\n      });\n      dispatch({\n        type: 'SET_NEWS',\n        payload: newsData\n      });\n      dispatch({\n        type: 'SET_PORTFOLIO',\n        payload: portfolioData\n      });\n    } catch (error) {\n      console.error('Error loading initial data:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n\n      // Set empty data as fallback\n      dispatch({\n        type: 'SET_SIGNALS',\n        payload: []\n      });\n      dispatch({\n        type: 'SET_NEWS',\n        payload: []\n      });\n      dispatch({\n        type: 'SET_PORTFOLIO',\n        payload: null\n      });\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  }, [isAuthenticated]);\n\n  // Load market data for specific symbol\n  const loadMarketData = useCallback(async (symbol, period = '1d') => {\n    try {\n      const marketData = await api.getMarketData(symbol, period);\n      dispatch({\n        type: 'SET_MARKET_DATA',\n        payload: {\n          ...state.marketData,\n          [symbol]: marketData\n        }\n      });\n      return marketData;\n    } catch (error) {\n      console.error(`Error loading market data for ${symbol}:`, error);\n      throw error;\n    }\n  }, [state.marketData]);\n\n  // Refresh signals data\n  const refreshSignals = useCallback(async () => {\n    try {\n      const signalsData = await api.getSignals({\n        limit: 20\n      });\n      dispatch({\n        type: 'SET_SIGNALS',\n        payload: signalsData\n      });\n      return signalsData;\n    } catch (error) {\n      console.error('Error refreshing signals:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n      throw error;\n    }\n  }, []);\n\n  // Refresh news data\n  const refreshNews = useCallback(async () => {\n    try {\n      const newsData = await api.getNews({\n        limit: 10\n      });\n      dispatch({\n        type: 'SET_NEWS',\n        payload: newsData\n      });\n      return newsData;\n    } catch (error) {\n      console.error('Error refreshing news:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n      throw error;\n    }\n  }, []);\n\n  // Refresh portfolio data\n  const refreshPortfolio = useCallback(async () => {\n    try {\n      const portfolioData = await api.getPortfolio();\n      dispatch({\n        type: 'SET_PORTFOLIO',\n        payload: portfolioData\n      });\n      return portfolioData;\n    } catch (error) {\n      console.error('Error refreshing portfolio:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n      throw error;\n    }\n  }, []);\n\n  // Run backtest\n  const runBacktest = useCallback(async config => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const results = await api.runBacktest(config);\n      dispatch({\n        type: 'SET_BACKTEST_RESULTS',\n        payload: results\n      });\n      return results;\n    } catch (error) {\n      console.error('Error running backtest:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n      throw error;\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  }, []);\n\n  // Update user preferences\n  const updatePreferences = useCallback(async updates => {\n    try {\n      var _response$user2;\n      const response = await api.updateUserProfile(updates);\n      const preferences = response.preferences || ((_response$user2 = response.user) === null || _response$user2 === void 0 ? void 0 : _response$user2.preferences) || updates;\n      dispatch({\n        type: 'SET_USER_PREFERENCES',\n        payload: preferences\n      });\n      return {\n        success: true,\n        preferences\n      };\n    } catch (error) {\n      console.error('Error updating preferences:', error);\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  }, []);\n\n  // Add alert\n  const addAlert = useCallback(alert => {\n    const id = Date.now().toString() + Math.random().toString(36).substr(2, 9);\n    const alertWithId = {\n      ...alert,\n      id\n    };\n    dispatch({\n      type: 'ADD_ALERT',\n      payload: alertWithId\n    });\n\n    // Auto-remove alert after 5 seconds\n    setTimeout(() => {\n      dispatch({\n        type: 'REMOVE_ALERT',\n        payload: id\n      });\n    }, 5000);\n  }, []);\n\n  // Clear error\n  const clearError = useCallback(() => {\n    dispatch({\n      type: 'SET_ERROR',\n      payload: null\n    });\n  }, []);\n\n  // Clear all alerts\n  const clearAlerts = useCallback(() => {\n    dispatch({\n      type: 'CLEAR_ALERTS'\n    });\n  }, []);\n\n  // Effect to load data when user changes\n  useEffect(() => {\n    if (isAuthenticated) {\n      loadUserPreferences();\n      loadInitialData();\n    } else {\n      // Reset state when user logs out\n      dispatch({\n        type: 'SET_SIGNALS',\n        payload: []\n      });\n      dispatch({\n        type: 'SET_NEWS',\n        payload: []\n      });\n      dispatch({\n        type: 'SET_PORTFOLIO',\n        payload: null\n      });\n      dispatch({\n        type: 'SET_USER_PREFERENCES',\n        payload: null\n      });\n      dispatch({\n        type: 'SET_BACKTEST_RESULTS',\n        payload: null\n      });\n    }\n  }, [isAuthenticated, loadUserPreferences, loadInitialData]);\n\n  // Effect to handle global errors and show alerts\n  useEffect(() => {\n    if (state.error) {\n      addAlert({\n        type: 'error',\n        message: state.error,\n        title: 'Error'\n      });\n    }\n  }, [state.error, addAlert]);\n  const value = {\n    // State\n    ...state,\n    // Actions\n    loadInitialData,\n    refreshSignals,\n    refreshNews,\n    refreshPortfolio,\n    loadMarketData,\n    runBacktest,\n    updatePreferences,\n    addAlert,\n    clearError,\n    clearAlerts\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s2(AppProvider, \"OHcIbKwQcnZ8+aBvzLnoiN0fz3w=\", false, function () {\n  return [useAuth];\n});\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useCallback","useAuth","api","jsxDEV","_jsxDEV","AppContext","appReducer","state","action","_action$payload","_action$payload2","_action$payload3","_action$payload4","type","loading","payload","error","signals","Array","isArray","data","marketData","news","userPreferences","portfolio","alerts","filter","alert","id","backtestResults","initialState","useApp","_s","context","Error","AppProvider","children","_s2","dispatch","user","isAuthenticated","loadUserPreferences","_response$user","response","getUserProfile","preferences","console","email","push","defaultSymbols","riskTolerance","loadInitialData","signalsData","newsData","portfolioData","Promise","all","getSignals","limit","getNews","getPortfolio","message","loadMarketData","symbol","period","getMarketData","refreshSignals","refreshNews","refreshPortfolio","runBacktest","config","results","updatePreferences","updates","_response$user2","updateUserProfile","success","addAlert","Date","now","toString","Math","random","substr","alertWithId","setTimeout","clearError","clearAlerts","title","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ayush Goel/OneDrive/Desktop/DEPLOYED/STOCKMARKET/frontend/src/contexts/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useCallback } from 'react';\r\nimport { useAuth } from './AuthContext';\r\nimport { api } from '../services/api';\r\n\r\nconst AppContext = createContext();\r\n\r\nconst appReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    case 'SET_ERROR':\r\n      return { ...state, error: action.payload };\r\n    case 'SET_SIGNALS':\r\n      // Handle different response formats and ensure array\r\n      const signals = Array.isArray(action.payload) ? action.payload : \r\n                     action.payload?.signals ? action.payload.signals : \r\n                     action.payload?.data ? action.payload.data : [];\r\n      return { ...state, signals };\r\n    case 'SET_MARKET_DATA':\r\n      return { ...state, marketData: action.payload };\r\n    case 'SET_NEWS':\r\n      // Handle different response formats and ensure array\r\n      const news = Array.isArray(action.payload) ? action.payload : \r\n                  action.payload?.news ? action.payload.news : \r\n                  action.payload?.data ? action.payload.data : [];\r\n      return { ...state, news };\r\n    case 'SET_USER_PREFERENCES':\r\n      return { ...state, userPreferences: action.payload };\r\n    case 'SET_PORTFOLIO':\r\n      return { ...state, portfolio: action.payload };\r\n    case 'ADD_ALERT':\r\n      return { ...state, alerts: [...state.alerts, action.payload] };\r\n    case 'REMOVE_ALERT':\r\n      return { ...state, alerts: state.alerts.filter(alert => alert.id !== action.payload) };\r\n    case 'CLEAR_ALERTS':\r\n      return { ...state, alerts: [] };\r\n    case 'SET_BACKTEST_RESULTS':\r\n      return { ...state, backtestResults: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  signals: [],\r\n  marketData: {},\r\n  news: [],\r\n  userPreferences: null,\r\n  portfolio: null,\r\n  backtestResults: null,\r\n  alerts: []\r\n};\r\n\r\nexport const useApp = () => {\r\n  const context = useContext(AppContext);\r\n  if (!context) {\r\n    throw new Error('useApp must be used within an AppProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  const { user, isAuthenticated } = useAuth();\r\n\r\n  // Load user preferences when user authenticates\r\n  const loadUserPreferences = useCallback(async () => {\r\n    if (!isAuthenticated) return;\r\n    \r\n    try {\r\n      const response = await api.getUserProfile();\r\n      // Handle both direct preferences object and nested user.preferences\r\n      const preferences = response.preferences || response.user?.preferences || null;\r\n      dispatch({ type: 'SET_USER_PREFERENCES', payload: preferences });\r\n    } catch (error) {\r\n      console.error('Failed to load user preferences:', error);\r\n      // Set default preferences if API fails\r\n      dispatch({ \r\n        type: 'SET_USER_PREFERENCES', \r\n        payload: {\r\n          alerts: { email: true, push: false },\r\n          defaultSymbols: ['AAPL', 'MSFT', 'GOOGL', 'AMZN', 'TSLA'],\r\n          riskTolerance: 'medium'\r\n        }\r\n      });\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  // Load initial data when user authenticates\r\n  const loadInitialData = useCallback(async () => {\r\n    if (!isAuthenticated) return;\r\n    \r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      dispatch({ type: 'SET_ERROR', payload: null });\r\n      \r\n      // Load data in parallel for better performance\r\n      const [signalsData, newsData, portfolioData] = await Promise.all([\r\n        api.getSignals({ limit: 20 }),\r\n        api.getNews({ limit: 10 }),\r\n        api.getPortfolio()\r\n      ]);\r\n      \r\n      dispatch({ type: 'SET_SIGNALS', payload: signalsData });\r\n      dispatch({ type: 'SET_NEWS', payload: newsData });\r\n      dispatch({ type: 'SET_PORTFOLIO', payload: portfolioData });\r\n      \r\n    } catch (error) {\r\n      console.error('Error loading initial data:', error);\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n      \r\n      // Set empty data as fallback\r\n      dispatch({ type: 'SET_SIGNALS', payload: [] });\r\n      dispatch({ type: 'SET_NEWS', payload: [] });\r\n      dispatch({ type: 'SET_PORTFOLIO', payload: null });\r\n    } finally {\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  // Load market data for specific symbol\r\n  const loadMarketData = useCallback(async (symbol, period = '1d') => {\r\n    try {\r\n      const marketData = await api.getMarketData(symbol, period);\r\n      dispatch({ \r\n        type: 'SET_MARKET_DATA', \r\n        payload: {\r\n          ...state.marketData,\r\n          [symbol]: marketData\r\n        }\r\n      });\r\n      return marketData;\r\n    } catch (error) {\r\n      console.error(`Error loading market data for ${symbol}:`, error);\r\n      throw error;\r\n    }\r\n  }, [state.marketData]);\r\n\r\n  // Refresh signals data\r\n  const refreshSignals = useCallback(async () => {\r\n    try {\r\n      const signalsData = await api.getSignals({ limit: 20 });\r\n      dispatch({ type: 'SET_SIGNALS', payload: signalsData });\r\n      return signalsData;\r\n    } catch (error) {\r\n      console.error('Error refreshing signals:', error);\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Refresh news data\r\n  const refreshNews = useCallback(async () => {\r\n    try {\r\n      const newsData = await api.getNews({ limit: 10 });\r\n      dispatch({ type: 'SET_NEWS', payload: newsData });\r\n      return newsData;\r\n    } catch (error) {\r\n      console.error('Error refreshing news:', error);\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Refresh portfolio data\r\n  const refreshPortfolio = useCallback(async () => {\r\n    try {\r\n      const portfolioData = await api.getPortfolio();\r\n      dispatch({ type: 'SET_PORTFOLIO', payload: portfolioData });\r\n      return portfolioData;\r\n    } catch (error) {\r\n      console.error('Error refreshing portfolio:', error);\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n      throw error;\r\n    }\r\n  }, []);\r\n\r\n  // Run backtest\r\n  const runBacktest = useCallback(async (config) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      const results = await api.runBacktest(config);\r\n      dispatch({ type: 'SET_BACKTEST_RESULTS', payload: results });\r\n      return results;\r\n    } catch (error) {\r\n      console.error('Error running backtest:', error);\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: 'SET_LOADING', payload: false });\r\n    }\r\n  }, []);\r\n\r\n  // Update user preferences\r\n  const updatePreferences = useCallback(async (updates) => {\r\n    try {\r\n      const response = await api.updateUserProfile(updates);\r\n      const preferences = response.preferences || response.user?.preferences || updates;\r\n      dispatch({ type: 'SET_USER_PREFERENCES', payload: preferences });\r\n      return { success: true, preferences };\r\n    } catch (error) {\r\n      console.error('Error updating preferences:', error);\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n      return { success: false, error: error.message };\r\n    }\r\n  }, []);\r\n\r\n  // Add alert\r\n  const addAlert = useCallback((alert) => {\r\n    const id = Date.now().toString() + Math.random().toString(36).substr(2, 9);\r\n    const alertWithId = { ...alert, id };\r\n    \r\n    dispatch({ type: 'ADD_ALERT', payload: alertWithId });\r\n    \r\n    // Auto-remove alert after 5 seconds\r\n    setTimeout(() => {\r\n      dispatch({ type: 'REMOVE_ALERT', payload: id });\r\n    }, 5000);\r\n  }, []);\r\n\r\n  // Clear error\r\n  const clearError = useCallback(() => {\r\n    dispatch({ type: 'SET_ERROR', payload: null });\r\n  }, []);\r\n\r\n  // Clear all alerts\r\n  const clearAlerts = useCallback(() => {\r\n    dispatch({ type: 'CLEAR_ALERTS' });\r\n  }, []);\r\n\r\n  // Effect to load data when user changes\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      loadUserPreferences();\r\n      loadInitialData();\r\n    } else {\r\n      // Reset state when user logs out\r\n      dispatch({ type: 'SET_SIGNALS', payload: [] });\r\n      dispatch({ type: 'SET_NEWS', payload: [] });\r\n      dispatch({ type: 'SET_PORTFOLIO', payload: null });\r\n      dispatch({ type: 'SET_USER_PREFERENCES', payload: null });\r\n      dispatch({ type: 'SET_BACKTEST_RESULTS', payload: null });\r\n    }\r\n  }, [isAuthenticated, loadUserPreferences, loadInitialData]);\r\n\r\n  // Effect to handle global errors and show alerts\r\n  useEffect(() => {\r\n    if (state.error) {\r\n      addAlert({\r\n        type: 'error',\r\n        message: state.error,\r\n        title: 'Error'\r\n      });\r\n    }\r\n  }, [state.error, addAlert]);\r\n\r\n  const value = {\r\n    // State\r\n    ...state,\r\n    \r\n    // Actions\r\n    loadInitialData,\r\n    refreshSignals,\r\n    refreshNews,\r\n    refreshPortfolio,\r\n    loadMarketData,\r\n    runBacktest,\r\n    updatePreferences,\r\n    addAlert,\r\n    clearError,\r\n    clearAlerts\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}