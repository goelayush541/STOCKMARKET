{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const token = localStorage.getItem('token');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...options.headers\n    };\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n    const config = {\n      ...options,\n      headers\n    };\n    try {\n      const response = await fetch(url, config);\n      if (response.status === 401) {\n        // Token might be expired\n        localStorage.removeItem('token');\n        window.location.reload();\n        throw new Error('Authentication failed');\n      }\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // Signals endpoints\n  getSignals(params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    return this.request(`/api/signals?${queryString}`);\n  }\n  getSignal(id) {\n    return this.request(`/api/signals/${id}`);\n  }\n\n  // News endpoints\n  getNews(params = {}) {\n    const queryString = new URLSearchParams(params).toString();\n    return this.request(`/api/news?${queryString}`);\n  }\n\n  // Market data endpoints\n  getMarketData(symbol, period = '1d') {\n    return this.request(`/api/market-data/${symbol}?period=${period}`);\n  }\n\n  // Backtesting endpoints\n  runBacktest(config) {\n    return this.request('/api/backtest', {\n      method: 'POST',\n      body: JSON.stringify(config)\n    });\n  }\n  getBacktestResults(id) {\n    return this.request(`/api/backtest/${id}`);\n  }\n\n  // Portfolio endpoints\n  getPortfolio() {\n    return this.request('/api/portfolio');\n  }\n  updatePortfolio(updates) {\n    return this.request('/api/portfolio', {\n      method: 'PUT',\n      body: JSON.stringify(updates)\n    });\n  }\n\n  // User endpoints\n  getUserProfile() {\n    return this.request('/api/user/profile');\n  }\n  updateUserProfile(updates) {\n    return this.request('/api/user/profile', {\n      method: 'PUT',\n      body: JSON.stringify(updates)\n    });\n  }\n\n  // Admin endpoints\n  getSystemHealth() {\n    return this.request('/api/admin/health');\n  }\n  getUsageStats() {\n    return this.request('/api/admin/stats');\n  }\n}\nexport const api = new ApiService();\nexport default api;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","constructor","baseURL","request","endpoint","options","url","token","localStorage","getItem","headers","config","response","fetch","status","removeItem","window","location","reload","Error","ok","errorData","json","catch","message","error","console","getSignals","params","queryString","URLSearchParams","toString","getSignal","id","getNews","getMarketData","symbol","period","runBacktest","method","body","JSON","stringify","getBacktestResults","getPortfolio","updatePortfolio","updates","getUserProfile","updateUserProfile","getSystemHealth","getUsageStats","api"],"sources":["C:/Users/Ayush Goel/OneDrive/Desktop/DEPLOYED/STOCKMARKET/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nclass ApiService {\r\n  constructor() {\r\n    this.baseURL = API_BASE_URL;\r\n  }\r\n\r\n  async request(endpoint, options = {}) {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n    const token = localStorage.getItem('token');\r\n    \r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      ...options.headers\r\n    };\r\n    \r\n    if (token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    \r\n    const config = {\r\n      ...options,\r\n      headers\r\n    };\r\n    \r\n    try {\r\n      const response = await fetch(url, config);\r\n      \r\n      if (response.status === 401) {\r\n        // Token might be expired\r\n        localStorage.removeItem('token');\r\n        window.location.reload();\r\n        throw new Error('Authentication failed');\r\n      }\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.message || `HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Signals endpoints\r\n  getSignals(params = {}) {\r\n    const queryString = new URLSearchParams(params).toString();\r\n    return this.request(`/api/signals?${queryString}`);\r\n  }\r\n  \r\n  getSignal(id) {\r\n    return this.request(`/api/signals/${id}`);\r\n  }\r\n  \r\n  // News endpoints\r\n  getNews(params = {}) {\r\n    const queryString = new URLSearchParams(params).toString();\r\n    return this.request(`/api/news?${queryString}`);\r\n  }\r\n  \r\n  // Market data endpoints\r\n  getMarketData(symbol, period = '1d') {\r\n    return this.request(`/api/market-data/${symbol}?period=${period}`);\r\n  }\r\n  \r\n  // Backtesting endpoints\r\n  runBacktest(config) {\r\n    return this.request('/api/backtest', {\r\n      method: 'POST',\r\n      body: JSON.stringify(config)\r\n    });\r\n  }\r\n  \r\n  getBacktestResults(id) {\r\n    return this.request(`/api/backtest/${id}`);\r\n  }\r\n  \r\n  // Portfolio endpoints\r\n  getPortfolio() {\r\n    return this.request('/api/portfolio');\r\n  }\r\n  \r\n  updatePortfolio(updates) {\r\n    return this.request('/api/portfolio', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(updates)\r\n    });\r\n  }\r\n  \r\n  // User endpoints\r\n  getUserProfile() {\r\n    return this.request('/api/user/profile');\r\n  }\r\n  \r\n  updateUserProfile(updates) {\r\n    return this.request('/api/user/profile', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(updates)\r\n    });\r\n  }\r\n  \r\n  // Admin endpoints\r\n  getSystemHealth() {\r\n    return this.request('/api/admin/health');\r\n  }\r\n  \r\n  getUsageStats() {\r\n    return this.request('/api/admin/stats');\r\n  }\r\n}\r\n\r\nexport const api = new ApiService();\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}