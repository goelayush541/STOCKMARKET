{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nclass AuthService {\n  constructor() {\n    this.token = localStorage.getItem('token');\n  }\n  async login(email, password) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Login failed');\n      }\n      const data = await response.json();\n      this.token = data.token;\n      localStorage.setItem('token', data.token);\n      return {\n        user: data.user,\n        token: data.token\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  }\n  async register(userData) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Registration failed');\n      }\n      const data = await response.json();\n      this.token = data.token;\n      localStorage.setItem('token', data.token);\n      return {\n        user: data.user,\n        token: data.token\n      };\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  }\n  async logout() {\n    this.token = null;\n    localStorage.removeItem('token');\n    try {\n      await fetch(`${API_BASE_URL}/api/auth/logout`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${this.token}`\n        }\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  }\n  async verifyToken(token) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/auth/verify`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Token verification failed');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Token verification error:', error);\n      throw error;\n    }\n  }\n  isAuthenticated() {\n    return !!this.token;\n  }\n  getToken() {\n    return this.token;\n  }\n}\nexport const authService = new AuthService();\nexport default authService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","AuthService","constructor","token","localStorage","getItem","login","email","password","response","fetch","method","headers","body","JSON","stringify","ok","error","json","Error","message","data","setItem","user","console","register","userData","logout","removeItem","verifyToken","isAuthenticated","getToken","authService"],"sources":["C:/Users/Ayush Goel/OneDrive/Desktop/DEPLOYED/STOCKMARKET/frontend/src/services/auth.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.token = localStorage.getItem('token');\r\n  }\r\n\r\n  async login(email, password) {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Login failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      this.token = data.token;\r\n      localStorage.setItem('token', data.token);\r\n      \r\n      return { user: data.user, token: data.token };\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async register(userData) {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(userData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const error = await response.json();\r\n        throw new Error(error.message || 'Registration failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      this.token = data.token;\r\n      localStorage.setItem('token', data.token);\r\n      \r\n      return { user: data.user, token: data.token };\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async logout() {\r\n    this.token = null;\r\n    localStorage.removeItem('token');\r\n    \r\n    try {\r\n      await fetch(`${API_BASE_URL}/api/auth/logout`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${this.token}`\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    }\r\n  }\r\n\r\n  async verifyToken(token) {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/api/auth/verify`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Token verification failed');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Token verification error:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return !!this.token;\r\n  }\r\n\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n}\r\n\r\nexport const authService = new AuthService();\r\nexport default authService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}